{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home \u00b6 Team \u00b6 Rita Borelli - DevOps Victor Li - Software Developer Mitchell Rysavy - Team Lead, Backend/Infrastructure Developer Kristy Sakano - Software Developer Partner Organization \u00b6 Our partner organization is the group of labs using the C4G BLIS tool currently. C4G Basic Laboratory Information System (BLIS) is an open-source system to track patients, specimens, and laboratory results. We are working in collaboration with Dr. Vempala to coordinate communication with country level BLIS coordinators. Individual labs are using the local BLIS tool currently, but some regions have reliable internet and have made requests for an online version of the tool. We aim to work on the following specific needs: Provide a way to host BLIS in a persistent, Internet-connected way that is \u201calways on\u201d Provide a way to see the data from many labs at once Provide an updated FAQ to answer immediate questions regarding BLIS\u2019 operations Project Goals \u00b6 Main Goal \u00b6 Create a version of BLIS that runs in Docker container on a cloud instance Provide documentation on setting up BLIS on a cloud server Update user guide for BLIS to account for the new version Feedback and Development \u00b6 We are awaiting a chance to get input from the stakeholders on their preference, but we will propose some combination of the following options for the feedback loop: Milestone check-ins Demo sessions via live meetings Sync via email channel We also outline a plan for development, evaluation, and deployment. Development: we\u2019ll develop new features utilizing version control with a forked version of the repository. Evaluation: we\u2019ll ask end users a few quantitative questions (how often they would use each new feature, on a scale of 1-5; how easy to use it was, etc.), as well as solicit qualitative feedback (is there anything they would change to make the new feature easier to use). Deployment: after new features are ready for deployment, we\u2019ll submit pull requests to the main BLIS repository. We can provide a BLIS update package for clients to use, if necessary. Finally, we note an important consideration that affected design choices. Since backwards compatibility is a key feature of BLIS, developing a hybrid server/desktop version is probably not feasible. Given that, we can add a feature to the current version of BLIS that can export and periodically upload data to a central node, which can be designed as a full server-side/cloud application.","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#team","text":"Rita Borelli - DevOps Victor Li - Software Developer Mitchell Rysavy - Team Lead, Backend/Infrastructure Developer Kristy Sakano - Software Developer","title":"Team"},{"location":"#partner-organization","text":"Our partner organization is the group of labs using the C4G BLIS tool currently. C4G Basic Laboratory Information System (BLIS) is an open-source system to track patients, specimens, and laboratory results. We are working in collaboration with Dr. Vempala to coordinate communication with country level BLIS coordinators. Individual labs are using the local BLIS tool currently, but some regions have reliable internet and have made requests for an online version of the tool. We aim to work on the following specific needs: Provide a way to host BLIS in a persistent, Internet-connected way that is \u201calways on\u201d Provide a way to see the data from many labs at once Provide an updated FAQ to answer immediate questions regarding BLIS\u2019 operations","title":"Partner Organization"},{"location":"#project-goals","text":"","title":"Project Goals"},{"location":"#main-goal","text":"Create a version of BLIS that runs in Docker container on a cloud instance Provide documentation on setting up BLIS on a cloud server Update user guide for BLIS to account for the new version","title":"Main Goal"},{"location":"#feedback-and-development","text":"We are awaiting a chance to get input from the stakeholders on their preference, but we will propose some combination of the following options for the feedback loop: Milestone check-ins Demo sessions via live meetings Sync via email channel We also outline a plan for development, evaluation, and deployment. Development: we\u2019ll develop new features utilizing version control with a forked version of the repository. Evaluation: we\u2019ll ask end users a few quantitative questions (how often they would use each new feature, on a scale of 1-5; how easy to use it was, etc.), as well as solicit qualitative feedback (is there anything they would change to make the new feature easier to use). Deployment: after new features are ready for deployment, we\u2019ll submit pull requests to the main BLIS repository. We can provide a BLIS update package for clients to use, if necessary. Finally, we note an important consideration that affected design choices. Since backwards compatibility is a key feature of BLIS, developing a hybrid server/desktop version is probably not feasible. Given that, we can add a feature to the current version of BLIS that can export and periodically upload data to a central node, which can be designed as a full server-side/cloud application.","title":"Feedback and Development"},{"location":"blis_cloud/","text":"Running BLIS on a Cloud Provider \u00b6 There is experimental support for running BLIS on a cloud provider in the form of a Docker container! Quick Version \u00b6 Skip this section for step-by-step instructions on getting BLIS running. You must already have an account with a cloud provider to continue, and you must create a virtual machine running a relatively modern Linux distribution. For testing, Digital Ocean and the minimum-level $5/month droplet was used. You must install Docker Engine for the Linux distro you are running. You must install Docker Compose . Either V1 ( docker-compose ) or V2 ( docker compose ) will work, but for this example, docker-compose V1 will be used. Creating a Droplet \u00b6 You can follow the instructions on DigitalOcean to create a droplet here . Any Linux distribution should work, but for the purposes of this guide, it is assumed you will use Ubuntu. After creating the droplet, make sure you either note down the root user password you set, or you have an key configured for passwordless login. Follow the instructions here to connect to the droplet via SSH . Installing Docker \u00b6 When you are SSH'd into the droplet, in the terminal, run these commands to install Docker: sudo apt-get update sudo apt-get install ca-certificates curl gnupg lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg \\ --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ \"deb [arch= $( dpkg --print-architecture ) \\ signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \\ https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) stable\" | sudo tee \\ /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update sudo apt-get install -y docker-ce docker-ce-cli containerd.io Install Docker Compose V1: sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose Now you're ready to run BLIS! Running BLIS \u00b6 In the DigitalOcean Droplet via SSH, clone the BLIS repository: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Change to the BLIS Docker directory $ cd BLIS/docker Initialize BLIS! $ docker-compose up -d These commands will set up two containers: The app container: This contains all of the BLIS source code, as well as the Apache2 web server and PHP 5.6 runtime. The db container: This contains the MySQL 5.7 database. The files inside the docker/database/ folder are executed when the container is created, providing the seed data that the BLIS database needs to start. Accessing BLIS \u00b6 Now, BLIS should be running. You can access it by visiting a URL that looks like: http://[your droplet IP address]/ Substitute your droplet IP address above - you should have this from SSHing into it. Upgrading BLIS \u00b6 When you want to upgrade BLIS, you can follow these commands to pull the latest version of the Docker image and restart the containers: $ docker-compose down $ docker-compose pull app $ docker-compose up -d And that's it! Adding an HTTPS certificate to BLIS \u00b6 By default, BLIS will only communicate over HTTP on port 80 (see docker/docker-compose.yml for the full port configuration.) BLIS includes support for automatically retrieving and configuring a certificate from Let's Encrypt for communicating over HTTPS. However, you must already have a domain configured and pointing at the host you are running BLIS on. This process is not included in this guide. If you are using DigitalOcean, there is a guide you can use as a jumping-off point here . After your domain is pointing to your BLIS host IP address \u00b6 You will need to add the BLIS_SERVER_NAME to the docker-compose.yml configuration: services: app: # This image is automatically built and pushed from the GitHub action in .github/workflows/ folder image: \"ghcr.io/c4g-spr22-blis/blis:latest\" environment: DB_HOST: 'db' DB_PORT: '3306' DB_USER: '[blis database user here]' DB_PASS: '[blis database password here]' # Add or uncomment this line, and change the domain value to your own BLIS_SERVER_NAME: 'blis.mydomain.com' Then, (re)start BLIS: # if BLIS is running $ docker-compose down # bring the database container up first and daemonize it $ docker-compose up -d db # bring the app container up alone, syncronously, so we can see the output $ docker-compose up app Make sure there are no errors in the output. The container will attempt to read the value of BLIS_SERVER_NAME and set the appropriate ServerName directive in the Apache2 web server configuration and a message will say that it is successful. Assuming it is successful, you can quit with Ctrl-C and restart as a background process ( docker-compose up -d app ). In a separate terminal window, while BLIS is running, run the script: $ docker-compose exec app get-https-cert.sh This will verify the environment configuration seems correct and execute the certificate tool for you! Answer the questions about the domain to the best of your knowledge. Once the domain is verified and the certificate installed, you can visit your BLIS instance with an https:// URL and hopefully it just works! Troubleshooting \u00b6 There maybe a error when you call docker-compose API, the error will show similar to: root@blis-test:~/BLIS/docker#docker-compose -bash: /usr/local/bin/docker-compose: Permission denied Using a chmod +x /usr/local/bin/docker-compose will help the work.","title":"Running BLIS on a Cloud Provider"},{"location":"blis_cloud/#running-blis-on-a-cloud-provider","text":"There is experimental support for running BLIS on a cloud provider in the form of a Docker container!","title":"Running BLIS on a Cloud Provider"},{"location":"blis_cloud/#quick-version","text":"Skip this section for step-by-step instructions on getting BLIS running. You must already have an account with a cloud provider to continue, and you must create a virtual machine running a relatively modern Linux distribution. For testing, Digital Ocean and the minimum-level $5/month droplet was used. You must install Docker Engine for the Linux distro you are running. You must install Docker Compose . Either V1 ( docker-compose ) or V2 ( docker compose ) will work, but for this example, docker-compose V1 will be used.","title":"Quick Version"},{"location":"blis_cloud/#creating-a-droplet","text":"You can follow the instructions on DigitalOcean to create a droplet here . Any Linux distribution should work, but for the purposes of this guide, it is assumed you will use Ubuntu. After creating the droplet, make sure you either note down the root user password you set, or you have an key configured for passwordless login. Follow the instructions here to connect to the droplet via SSH .","title":"Creating a Droplet"},{"location":"blis_cloud/#installing-docker","text":"When you are SSH'd into the droplet, in the terminal, run these commands to install Docker: sudo apt-get update sudo apt-get install ca-certificates curl gnupg lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg \\ --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ \"deb [arch= $( dpkg --print-architecture ) \\ signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \\ https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) stable\" | sudo tee \\ /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update sudo apt-get install -y docker-ce docker-ce-cli containerd.io Install Docker Compose V1: sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose Now you're ready to run BLIS!","title":"Installing Docker"},{"location":"blis_cloud/#running-blis","text":"In the DigitalOcean Droplet via SSH, clone the BLIS repository: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Change to the BLIS Docker directory $ cd BLIS/docker Initialize BLIS! $ docker-compose up -d These commands will set up two containers: The app container: This contains all of the BLIS source code, as well as the Apache2 web server and PHP 5.6 runtime. The db container: This contains the MySQL 5.7 database. The files inside the docker/database/ folder are executed when the container is created, providing the seed data that the BLIS database needs to start.","title":"Running BLIS"},{"location":"blis_cloud/#accessing-blis","text":"Now, BLIS should be running. You can access it by visiting a URL that looks like: http://[your droplet IP address]/ Substitute your droplet IP address above - you should have this from SSHing into it.","title":"Accessing BLIS"},{"location":"blis_cloud/#upgrading-blis","text":"When you want to upgrade BLIS, you can follow these commands to pull the latest version of the Docker image and restart the containers: $ docker-compose down $ docker-compose pull app $ docker-compose up -d And that's it!","title":"Upgrading BLIS"},{"location":"blis_cloud/#adding-an-https-certificate-to-blis","text":"By default, BLIS will only communicate over HTTP on port 80 (see docker/docker-compose.yml for the full port configuration.) BLIS includes support for automatically retrieving and configuring a certificate from Let's Encrypt for communicating over HTTPS. However, you must already have a domain configured and pointing at the host you are running BLIS on. This process is not included in this guide. If you are using DigitalOcean, there is a guide you can use as a jumping-off point here .","title":"Adding an HTTPS certificate to BLIS"},{"location":"blis_cloud/#after-your-domain-is-pointing-to-your-blis-host-ip-address","text":"You will need to add the BLIS_SERVER_NAME to the docker-compose.yml configuration: services: app: # This image is automatically built and pushed from the GitHub action in .github/workflows/ folder image: \"ghcr.io/c4g-spr22-blis/blis:latest\" environment: DB_HOST: 'db' DB_PORT: '3306' DB_USER: '[blis database user here]' DB_PASS: '[blis database password here]' # Add or uncomment this line, and change the domain value to your own BLIS_SERVER_NAME: 'blis.mydomain.com' Then, (re)start BLIS: # if BLIS is running $ docker-compose down # bring the database container up first and daemonize it $ docker-compose up -d db # bring the app container up alone, syncronously, so we can see the output $ docker-compose up app Make sure there are no errors in the output. The container will attempt to read the value of BLIS_SERVER_NAME and set the appropriate ServerName directive in the Apache2 web server configuration and a message will say that it is successful. Assuming it is successful, you can quit with Ctrl-C and restart as a background process ( docker-compose up -d app ). In a separate terminal window, while BLIS is running, run the script: $ docker-compose exec app get-https-cert.sh This will verify the environment configuration seems correct and execute the certificate tool for you! Answer the questions about the domain to the best of your knowledge. Once the domain is verified and the certificate installed, you can visit your BLIS instance with an https:// URL and hopefully it just works!","title":"After your domain is pointing to your BLIS host IP address"},{"location":"blis_cloud/#troubleshooting","text":"There maybe a error when you call docker-compose API, the error will show similar to: root@blis-test:~/BLIS/docker#docker-compose -bash: /usr/local/bin/docker-compose: Permission denied Using a chmod +x /usr/local/bin/docker-compose will help the work.","title":"Troubleshooting"},{"location":"faq/","text":"Frequently Asked Questions \u00b6 Q: I'm using BLIS for Windows and everytime I try to run the executable, it crashes! What's going on? \u00b6 A : Ensure that the zipped files from the Runtime.zip are extracted directly into the BLIS directory. They should not remain in a Runtime folder. Q: I am trying out BLIS. How do I login? \u00b6 A : Please login using the credentials: testlab1_admin/admin123 (as admin) or testlab1_tech1, testlab1_tech2/tech123 (as lab technician). Q: How do I look up a patient in our system? \u00b6 A : Navigate to the Registration tab and search for the patient by name, number, or ID. Q: How do I add a new patient? \u00b6 A : To add a new patient, navigate to the Registration tab. Do not enter anything into the search bar and click 'Search'. You will see an option to add new patient appear. Click the link to proceed. Q: How do I add a new Specimen to a patient? \u00b6 A : After pulling open the patient's profile, click the 'Register New Specimen' hyperlink on the righthand side. Q: How do I configure BLIS to upload data to the central web instance [Manager View Only]? \u00b6 A : In the Manager view, naviate to the Lab Configuration Tab, and then BLIS Online. Enter in the IP address of the BLIS server. Q: How do I change the language of BLIS? \u00b6 A : You can change the language to either the English or French version by clicking on the preferred language in the footer menu. BLIS has several language options to cater to a diverse community, and we're still working to implement our changes in all of them! Thank you for your patience. Q: I'm logged in as an admin user but I want to work as a lab technician. How do I switch to the technician interface? \u00b6 A : The Work as Technician option can be selected from the top right side of the header next to the logout button. Q: What are the different lab tests that BLIS can be used for? \u00b6 A : The lab tests that BLIS can be used for are configured by your administrator, so they vary from lab to lab. Check with you local adminstrator for more information. Q: How do I add new BLIS users to the system? \u00b6 A : An administrator can add new users. The types of users can also be configured. To add a new user, you must be logged in as an adminstrator. Go the the Lab Configuration tab and select the User Accounts option (from this page you can also add new user types, e.g. technicians or administrators. Click on Add New Account and fill out the form that pops up to add a new user. Be sure to click the Add button, not Close at the bottom of the form. permissions.","title":"Frequently Asked Questions"},{"location":"faq/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"faq/#q-im-using-blis-for-windows-and-everytime-i-try-to-run-the-executable-it-crashes-whats-going-on","text":"A : Ensure that the zipped files from the Runtime.zip are extracted directly into the BLIS directory. They should not remain in a Runtime folder.","title":"Q: I'm using BLIS for Windows and everytime I try to run the executable, it crashes! What's going on?"},{"location":"faq/#q-i-am-trying-out-blis-how-do-i-login","text":"A : Please login using the credentials: testlab1_admin/admin123 (as admin) or testlab1_tech1, testlab1_tech2/tech123 (as lab technician).","title":"Q: I am trying out BLIS. How do I login?"},{"location":"faq/#q-how-do-i-look-up-a-patient-in-our-system","text":"A : Navigate to the Registration tab and search for the patient by name, number, or ID.","title":"Q: How do I look up a patient in our system?"},{"location":"faq/#q-how-do-i-add-a-new-patient","text":"A : To add a new patient, navigate to the Registration tab. Do not enter anything into the search bar and click 'Search'. You will see an option to add new patient appear. Click the link to proceed.","title":"Q: How do I add a new patient?"},{"location":"faq/#q-how-do-i-add-a-new-specimen-to-a-patient","text":"A : After pulling open the patient's profile, click the 'Register New Specimen' hyperlink on the righthand side.","title":"Q: How do I add a new Specimen to a patient?"},{"location":"faq/#q-how-do-i-configure-blis-to-upload-data-to-the-central-web-instance-manager-view-only","text":"A : In the Manager view, naviate to the Lab Configuration Tab, and then BLIS Online. Enter in the IP address of the BLIS server.","title":"Q: How do I configure BLIS to upload data to the central web instance [Manager View Only]?"},{"location":"faq/#q-how-do-i-change-the-language-of-blis","text":"A : You can change the language to either the English or French version by clicking on the preferred language in the footer menu. BLIS has several language options to cater to a diverse community, and we're still working to implement our changes in all of them! Thank you for your patience.","title":"Q: How do I change the language of BLIS?"},{"location":"faq/#q-im-logged-in-as-an-admin-user-but-i-want-to-work-as-a-lab-technician-how-do-i-switch-to-the-technician-interface","text":"A : The Work as Technician option can be selected from the top right side of the header next to the logout button.","title":"Q: I'm logged in as an admin user but I want to work as a lab technician. How do I switch to the technician interface?"},{"location":"faq/#q-what-are-the-different-lab-tests-that-blis-can-be-used-for","text":"A : The lab tests that BLIS can be used for are configured by your administrator, so they vary from lab to lab. Check with you local adminstrator for more information.","title":"Q: What are the different lab tests that BLIS can be used for?"},{"location":"faq/#q-how-do-i-add-new-blis-users-to-the-system","text":"A : An administrator can add new users. The types of users can also be configured. To add a new user, you must be logged in as an adminstrator. Go the the Lab Configuration tab and select the User Accounts option (from this page you can also add new user types, e.g. technicians or administrators. Click on Add New Account and fill out the form that pops up to add a new user. Be sure to click the Add button, not Close at the bottom of the form. permissions.","title":"Q: How do I add new BLIS users to the system?"},{"location":"assignments/demo/","text":"Project Demo \u00b6","title":"Project Demo"},{"location":"assignments/demo/#project-demo","text":"","title":"Project Demo"},{"location":"assignments/initial_evaluation/","text":"Initial Evaluation \u00b6 Project Status (last updated 2022 March 02) \u00b6 For the remainder of the semester, we are focusing on creating a version of BLIS that can perform periodic updates to a version of BLIS running on a remote server. graph TD A[BLIS for Windows / individual lab machine]-->B[BLIS for Cloud / central BLIS instance]; C[BLIS for Windows / individual lab machine]-->|Backups run periodically and send data|B D[BLIS for Windows / individual lab machine]-->B The architecture will look roughly like: graph TD B[Background job: Is it time to run a backup?]-->A A[BLIS for Windows]-->|No|A A-->|Yes, initiate backup|C[Backup logic creates formatted data dump] C-->|Upload data|D[BLIS for Cloud] D-->|Read data dump, import into database|D We are splitting up the work like this: Task Assignee Create UI for configuring backup server in BLIS for Windows Rita Create background job to initiate a data dump and send data to the central server Kristy Implement the logic and define the format for dumping the data Mitchell Create endpoint on BLIS for Cloud to receive and import a data dump Victor Partner Organization \u00b6 Our partner organization is the group of labs using the C4G BLIS tool currently. C4G Basic Laboratory Information System (BLIS) is an open-source system to track patients, specimens, and laboratory results. We are working in collaboration with Dr. Vempala to coordinate communication with country level BLIS coordinators. Individual labs are using the local BLIS tool currently, but some regions have reliable internet and have made requests for an online version of the tool. We aim to work on the following specific needs: Provide a way to host BLIS in a persistent, Internet-connected way that is \u201calways on\u201d Provide a way to see the data from many labs at once Provide an updated FAQ to answer immediate questions regarding BLIS\u2019 operations Project Goals \u00b6 Main Goal \u00b6 Currently, there is a Country Director mode of operation that allows a director to view the data of multiple labs at once by having those labs export a backup file and import it from the country director side. This could be streamlined by providing a con- figuration option from individual lab BLIS instances to send periodic backups to a central server which can be ingested and analyzed there. Side Goals \u00b6 Data Visualization: Currently, in the country director view, we can see the aggregated data from each of the individual labs. This data can be presented to depict temporal changes of a disease progression or tests conducted across the various labs employing BLIS. We are considering various interactive and static visualization options. Aggregate data visualization will have limited access to only the country director view, as it is intended for policy decision making purposes. Updating FAQ: The current set of frequently asked questions is quite limited. Our stretch goal here is to expand the information covered and move the FAQs to a seperate page. Updating PHP verions: The version of PHP that BLIS uses is quite outdated. We propose updating BLIS to use a more recent PHP version in preparation for a future version of BLIS that can be containerized and deployed to the cloud. Feedback and Development \u00b6 We are awaiting a chance to get input from the stakeholders on their preference, but we will propose some combination of the following options for the feedback loop: Milestone check-ins Demo sessions via live meetings Sync via email channel We also outline a plan for development, evaluation, and deployment. Development: we\u2019ll develop new features utilizing version control with a forked version of the repository. Evaluation: we\u2019ll ask end users a few quantitative questions (how often they would use each new feature, on a scale of 1-5; how easy to use it was, etc.), as well as solicit qualitative feedback (is there anything they would change to make the new feature easier to use). Deployment: after new features are ready for deployment, we\u2019ll submit pull requests to the main BLIS repository. We can provide a BLIS update package for clients to use, if necessary. Finally, we note an important consideration that affected design choices. Since backwards compatibility is a key feature of BLIS, developing a hybrid server/desktop version is probably not feasible. Given that, we can add a feature to the current version of BLIS that can export and periodically upload data to a central node, which can be designed as a full server-side/cloud application.","title":"Initial Evaluation"},{"location":"assignments/initial_evaluation/#initial-evaluation","text":"","title":"Initial Evaluation"},{"location":"assignments/initial_evaluation/#project-status-last-updated-2022-march-02","text":"For the remainder of the semester, we are focusing on creating a version of BLIS that can perform periodic updates to a version of BLIS running on a remote server. graph TD A[BLIS for Windows / individual lab machine]-->B[BLIS for Cloud / central BLIS instance]; C[BLIS for Windows / individual lab machine]-->|Backups run periodically and send data|B D[BLIS for Windows / individual lab machine]-->B The architecture will look roughly like: graph TD B[Background job: Is it time to run a backup?]-->A A[BLIS for Windows]-->|No|A A-->|Yes, initiate backup|C[Backup logic creates formatted data dump] C-->|Upload data|D[BLIS for Cloud] D-->|Read data dump, import into database|D We are splitting up the work like this: Task Assignee Create UI for configuring backup server in BLIS for Windows Rita Create background job to initiate a data dump and send data to the central server Kristy Implement the logic and define the format for dumping the data Mitchell Create endpoint on BLIS for Cloud to receive and import a data dump Victor","title":"Project Status (last updated 2022 March 02)"},{"location":"assignments/initial_evaluation/#partner-organization","text":"Our partner organization is the group of labs using the C4G BLIS tool currently. C4G Basic Laboratory Information System (BLIS) is an open-source system to track patients, specimens, and laboratory results. We are working in collaboration with Dr. Vempala to coordinate communication with country level BLIS coordinators. Individual labs are using the local BLIS tool currently, but some regions have reliable internet and have made requests for an online version of the tool. We aim to work on the following specific needs: Provide a way to host BLIS in a persistent, Internet-connected way that is \u201calways on\u201d Provide a way to see the data from many labs at once Provide an updated FAQ to answer immediate questions regarding BLIS\u2019 operations","title":"Partner Organization"},{"location":"assignments/initial_evaluation/#project-goals","text":"","title":"Project Goals"},{"location":"assignments/initial_evaluation/#main-goal","text":"Currently, there is a Country Director mode of operation that allows a director to view the data of multiple labs at once by having those labs export a backup file and import it from the country director side. This could be streamlined by providing a con- figuration option from individual lab BLIS instances to send periodic backups to a central server which can be ingested and analyzed there.","title":"Main Goal"},{"location":"assignments/initial_evaluation/#side-goals","text":"Data Visualization: Currently, in the country director view, we can see the aggregated data from each of the individual labs. This data can be presented to depict temporal changes of a disease progression or tests conducted across the various labs employing BLIS. We are considering various interactive and static visualization options. Aggregate data visualization will have limited access to only the country director view, as it is intended for policy decision making purposes. Updating FAQ: The current set of frequently asked questions is quite limited. Our stretch goal here is to expand the information covered and move the FAQs to a seperate page. Updating PHP verions: The version of PHP that BLIS uses is quite outdated. We propose updating BLIS to use a more recent PHP version in preparation for a future version of BLIS that can be containerized and deployed to the cloud.","title":"Side Goals"},{"location":"assignments/initial_evaluation/#feedback-and-development","text":"We are awaiting a chance to get input from the stakeholders on their preference, but we will propose some combination of the following options for the feedback loop: Milestone check-ins Demo sessions via live meetings Sync via email channel We also outline a plan for development, evaluation, and deployment. Development: we\u2019ll develop new features utilizing version control with a forked version of the repository. Evaluation: we\u2019ll ask end users a few quantitative questions (how often they would use each new feature, on a scale of 1-5; how easy to use it was, etc.), as well as solicit qualitative feedback (is there anything they would change to make the new feature easier to use). Deployment: after new features are ready for deployment, we\u2019ll submit pull requests to the main BLIS repository. We can provide a BLIS update package for clients to use, if necessary. Finally, we note an important consideration that affected design choices. Since backwards compatibility is a key feature of BLIS, developing a hybrid server/desktop version is probably not feasible. Given that, we can add a feature to the current version of BLIS that can export and periodically upload data to a central node, which can be designed as a full server-side/cloud application.","title":"Feedback and Development"},{"location":"assignments/peer_evaluations/","text":"Peer Evaluations \u00b6 Welcome to the C4G BLIS Webpage! Thanks for taking the time to review our project. Our main objective this semester was to create a create a version of BLIS that can push data from local computers running BLIS on Windows to a version of BLIS running on a remote server. You can read more about our objectives and current Project Status by checking out the Home page! Peer Review Task #1: Testing BLIS Cloud \u00b6 Over the past semester, we've been working to deploy a version of BLIS that is capable of running on a Cloud Provider. It is accessible with the following link: http://188.166.124.131/home.php For the first part of our peer review task, please open the short form, accessible here: https://forms.office.com/r/YG4cMaC0rP Instructions for this peer review task is embedded in the form. The first part of the peer review task ends after Task F; please do not close the survey and follow the instructions to complete the second half of the peer review evaluations. Peer Review Task #2: Pushing a data backup to BLIS Cloud \u00b6 Testimonies and user feedback from labs in Africa indicate that internet availability is not always guarenteed, so we wanted to create a version of BLIS for Windows that could push data to BLIS Cloud (or a central BLIS instance) when the user initiates the action. This next peer review task involves installing C4G BLIS v3.72, the most current version of BLIS. Warning BLIS is a Windows-based program and is most reliably accesible through the Microsoft Windows Operating System. Instructions \u00b6 Navigate to our instructions to install BLIS on Windows and follow the instructions to install BLIS on Windows. If you have any difficulties running BLIS, feel free to check out the FAQ or reach out to the dev team. After running BLIS.exe , you should be able to log into BLIS using the bundled Firefox web browser. You can use the same credentials to log in as last time, testlab1_admin/admin123 for the username/password combination. Note After logging in, if you are prompted to update BLIS to version 3.72, please do so! Our next set of instructions will step you through the process of a BLIS lab manager connecting to the BLIS Cloud server and creating a key. Click on the Lab Configuration tab, and then Blis Online on the left-hand side (you may need to scroll down to see the option; if the UI is blank, please read the FAQ Question \"What's going on with the UI?\"). Please enter in the BLIS Cloud ip address 188.166.124.131 and click Save . We have not yet built in UI functionality to confirm the save, FYI. Click on the Manage Backup Keys tab on the lefthand side. Next, click on Download Public Key button in green to download the public key for encryption purposes. After downloading the public key, click on the Add Key Alias button on the same page. You can put any name in the key alias, but for the purposes of this exercise, we will use \"my_pubkey\" as an example. Please upload the previously downloaded public key, and click Add to finish. A textbox prompt will say, \"Key added successfully\" upon a successful completion. Next, navigate to the Backup Data tab at the top selection bar. We are still working on the UI for the various languages that C4G BLIS supports, so please click Default at the bottom of the screen. This issue will be fixed in our final iteration. Next, please input the name you used previously for the key alias, \"my_pubkey\". Please select General Backup and Upload Public Key for Encryption . Then, click Browse and upload the key that you previously saved to your Downloads. (Optional) Click Download local .ZIP backup . It will send you to a new window prompting you to download a zip folder and save it to your disk. For the purposes of this peer evaluation, you do not need to download the zipped folder to your disk. You will see the following image if done correctly: Click Send data backup to server to send the data backup to the BLIS Cloud. A new window will pop-up and inform you that the data has been pushed to the server successfully. Finally, please finish the last survey question (Task G) and submit the survey on Google Forms. Thank you for providing your feedback!","title":"Peer Evaluations"},{"location":"assignments/peer_evaluations/#peer-evaluations","text":"Welcome to the C4G BLIS Webpage! Thanks for taking the time to review our project. Our main objective this semester was to create a create a version of BLIS that can push data from local computers running BLIS on Windows to a version of BLIS running on a remote server. You can read more about our objectives and current Project Status by checking out the Home page!","title":"Peer Evaluations"},{"location":"assignments/peer_evaluations/#peer-review-task-1-testing-blis-cloud","text":"Over the past semester, we've been working to deploy a version of BLIS that is capable of running on a Cloud Provider. It is accessible with the following link: http://188.166.124.131/home.php For the first part of our peer review task, please open the short form, accessible here: https://forms.office.com/r/YG4cMaC0rP Instructions for this peer review task is embedded in the form. The first part of the peer review task ends after Task F; please do not close the survey and follow the instructions to complete the second half of the peer review evaluations.","title":"Peer Review Task #1: Testing BLIS Cloud"},{"location":"assignments/peer_evaluations/#peer-review-task-2-pushing-a-data-backup-to-blis-cloud","text":"Testimonies and user feedback from labs in Africa indicate that internet availability is not always guarenteed, so we wanted to create a version of BLIS for Windows that could push data to BLIS Cloud (or a central BLIS instance) when the user initiates the action. This next peer review task involves installing C4G BLIS v3.72, the most current version of BLIS. Warning BLIS is a Windows-based program and is most reliably accesible through the Microsoft Windows Operating System.","title":"Peer Review Task #2: Pushing a data backup to BLIS Cloud"},{"location":"assignments/peer_evaluations/#instructions","text":"Navigate to our instructions to install BLIS on Windows and follow the instructions to install BLIS on Windows. If you have any difficulties running BLIS, feel free to check out the FAQ or reach out to the dev team. After running BLIS.exe , you should be able to log into BLIS using the bundled Firefox web browser. You can use the same credentials to log in as last time, testlab1_admin/admin123 for the username/password combination. Note After logging in, if you are prompted to update BLIS to version 3.72, please do so! Our next set of instructions will step you through the process of a BLIS lab manager connecting to the BLIS Cloud server and creating a key. Click on the Lab Configuration tab, and then Blis Online on the left-hand side (you may need to scroll down to see the option; if the UI is blank, please read the FAQ Question \"What's going on with the UI?\"). Please enter in the BLIS Cloud ip address 188.166.124.131 and click Save . We have not yet built in UI functionality to confirm the save, FYI. Click on the Manage Backup Keys tab on the lefthand side. Next, click on Download Public Key button in green to download the public key for encryption purposes. After downloading the public key, click on the Add Key Alias button on the same page. You can put any name in the key alias, but for the purposes of this exercise, we will use \"my_pubkey\" as an example. Please upload the previously downloaded public key, and click Add to finish. A textbox prompt will say, \"Key added successfully\" upon a successful completion. Next, navigate to the Backup Data tab at the top selection bar. We are still working on the UI for the various languages that C4G BLIS supports, so please click Default at the bottom of the screen. This issue will be fixed in our final iteration. Next, please input the name you used previously for the key alias, \"my_pubkey\". Please select General Backup and Upload Public Key for Encryption . Then, click Browse and upload the key that you previously saved to your Downloads. (Optional) Click Download local .ZIP backup . It will send you to a new window prompting you to download a zip folder and save it to your disk. For the purposes of this peer evaluation, you do not need to download the zipped folder to your disk. You will see the following image if done correctly: Click Send data backup to server to send the data backup to the BLIS Cloud. A new window will pop-up and inform you that the data has been pushed to the server successfully. Finally, please finish the last survey question (Task G) and submit the survey on Google Forms. Thank you for providing your feedback!","title":"Instructions"},{"location":"developer_documentation/blis_in_devcontainer/","text":"BLIS in a Devcontainer \u00b6 Danger This is experimental! Not everything will work exactly as it does on Windows. Devcontainers are a feature of Visual Studio Code that allow you to specify your development environment as a Docker container develop inside of it as if you were running the tools on your computer directly. The c4g-blis-spr22/BLIS repository has a .devcontainer configuration already specified, so you can develop BLIS on any computer that can run Docker and Visual Studio Code. Warning Although you can run BLIS in a devcontainer, this is only for development. For running a real copy of BLIS, you should still use the traditional Windows-based approach. Prerequisites \u00b6 git Visual Studio Code Docker: on Mac and Windows, Docker Desktop will work Instructions \u00b6 Clone the BLIS repository to your computer: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Open the folder in Visual Studio Code A pop-up that says something like \"This folder contains a devcontainer configuration\" will appear. Click the button to open the folder in a container. If that does not appear, open the command palette (Ctrl-Shift-P or Cmd-Shift-P) and find \"Open folder in container\" and select the BLIS folder. Once the container is started, the ports should forward automatically. You can see apache2 running if you click the \"Ports\" tab on the bottom (if the bottom panel is not open, use Ctrl-` (backtick) to open it) You can then browse BLIS in your normal browser by visiting http://localhost:80 (substituting 80 for another port, depending on what port VS Code has mapped to apache2.)","title":"BLIS in a Devcontainer"},{"location":"developer_documentation/blis_in_devcontainer/#blis-in-a-devcontainer","text":"Danger This is experimental! Not everything will work exactly as it does on Windows. Devcontainers are a feature of Visual Studio Code that allow you to specify your development environment as a Docker container develop inside of it as if you were running the tools on your computer directly. The c4g-blis-spr22/BLIS repository has a .devcontainer configuration already specified, so you can develop BLIS on any computer that can run Docker and Visual Studio Code. Warning Although you can run BLIS in a devcontainer, this is only for development. For running a real copy of BLIS, you should still use the traditional Windows-based approach.","title":"BLIS in a Devcontainer"},{"location":"developer_documentation/blis_in_devcontainer/#prerequisites","text":"git Visual Studio Code Docker: on Mac and Windows, Docker Desktop will work","title":"Prerequisites"},{"location":"developer_documentation/blis_in_devcontainer/#instructions","text":"Clone the BLIS repository to your computer: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Open the folder in Visual Studio Code A pop-up that says something like \"This folder contains a devcontainer configuration\" will appear. Click the button to open the folder in a container. If that does not appear, open the command palette (Ctrl-Shift-P or Cmd-Shift-P) and find \"Open folder in container\" and select the BLIS folder. Once the container is started, the ports should forward automatically. You can see apache2 running if you click the \"Ports\" tab on the bottom (if the bottom panel is not open, use Ctrl-` (backtick) to open it) You can then browse BLIS in your normal browser by visiting http://localhost:80 (substituting 80 for another port, depending on what port VS Code has mapped to apache2.)","title":"Instructions"},{"location":"developer_documentation/blis_on_windows/","text":"BLIS on Windows \u00b6 BLIS was originally developed to run on Windows using a discontinued project called Server2Go. This packages Apache2, MySQL, PHP, and Firefox together into a package that can be run all at once on a desktop computer. See Also Design and Implementation of a Basic Laboratory Information System for Resource-Limited Settings Server2Go - Portable Web Server This is the primary way that end-users are still using BLIS. You can still run BLIS this way to develop it. Prerequisites \u00b6 Installing command-line tools can be done with a Windows package manager such as Scoop . git Instructions \u00b6 Warning These instructions are subject to change. Clone the BLIS repository to your computer: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Download the latest version of BLISRuntime.zip archive Unzip BLISRuntime.zip into the BLIS repository directory Run BLIS.exe The bundled Firefox will start and you can use BLIS normally, or make changes to files in the htdocs/ directory.","title":"BLIS on Windows"},{"location":"developer_documentation/blis_on_windows/#blis-on-windows","text":"BLIS was originally developed to run on Windows using a discontinued project called Server2Go. This packages Apache2, MySQL, PHP, and Firefox together into a package that can be run all at once on a desktop computer. See Also Design and Implementation of a Basic Laboratory Information System for Resource-Limited Settings Server2Go - Portable Web Server This is the primary way that end-users are still using BLIS. You can still run BLIS this way to develop it.","title":"BLIS on Windows"},{"location":"developer_documentation/blis_on_windows/#prerequisites","text":"Installing command-line tools can be done with a Windows package manager such as Scoop . git","title":"Prerequisites"},{"location":"developer_documentation/blis_on_windows/#instructions","text":"Warning These instructions are subject to change. Clone the BLIS repository to your computer: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Download the latest version of BLISRuntime.zip archive Unzip BLISRuntime.zip into the BLIS repository directory Run BLIS.exe The bundled Firefox will start and you can use BLIS normally, or make changes to files in the htdocs/ directory.","title":"Instructions"},{"location":"milestones/create_faq/","text":"Create a BLIS FAQ \u00b6 #TODO 1. Identify most common questions that BLIS users have \u00b6 2. Answer questions and present them on the FAQ page on this website \u00b6 3. Provide links to edit pages or submit questions \u00b6","title":"Create a BLIS FAQ"},{"location":"milestones/create_faq/#create-a-blis-faq","text":"#TODO","title":"Create a BLIS FAQ"},{"location":"milestones/create_faq/#1-identify-most-common-questions-that-blis-users-have","text":"","title":"1. Identify most common questions that BLIS users have"},{"location":"milestones/create_faq/#2-answer-questions-and-present-them-on-the-faq-page-on-this-website","text":"","title":"2. Answer questions and present them on the FAQ page on this website"},{"location":"milestones/create_faq/#3-provide-links-to-edit-pages-or-submit-questions","text":"","title":"3. Provide links to edit pages or submit questions"},{"location":"milestones/online_blis/","text":"Create an Online Version of BLIS \u00b6 Design \u00b6 Make it work on Linux \u00b6 The current version of BLIS uses Windows-bundled applications to function as a desktop application. These applications are tightly coupled (as the Server2Go package) and cannot be easily, independently updated. Meanwhile, Linux servers are ubiquitous in a cloud setting. They are cheaper than Windows VMs on Azure and AWS . Additionally, Linux is the only first-class supported option on DigitalOcean , which is a platform that our partner specifically mentioned using for testing. Making modifications to BLIS such that it can run on both a Linux environment and the traditional bundled Windows approach is therefore a priority. Containerize it \u00b6 When BLIS was created, it was common for developers to install the webserver (Apache2), the runtime (PHP) and the database (MySQL) themselves and them drop the PHP application into a directory where the webserver could access it. Modern containerization technology such as Docker has allowed us to specify exactly how we want our application to be run and build the container that contains our entire application stack ourselves, ahead of time. This has benefits not only in setup of the application, but also security, as the application is isolated from the rest of the system. After the application is able to run in a container, something like docker compose can be used to configure and manage the deployment of the application as well as other standalone components (such as the database). Platforms such as DigitalOcean have a specification that allow an application to be deployed via container in just a few clicks (at a cost.) Containers are supported in all major cloud platforms, and even with self-hosted servers, they are easy to manage. Therefore, we will be providing a Docker container that runs BLIS. Create a devcontainer for developing BLIS in a Linux-like environment \u00b6 Complete! Create a release-ready Dockerfile for deploying BLIS \u00b6 Complete! Create a GitHub Action for automatically creating BLIS deployment packages from the repository \u00b6 Even though BLIS is packaged as a container, we could create a .zip file that bundles the necessary scripts, extra files (database seed files), etc. needed to run a containerized version of BLIS. This can be done by adding the files to the repo, and creating a GitHub Action that packages them together with every release. Create documentation about how to deploy BLIS as a container \u00b6 With the deployment package created (above), documentation needs to be added to make use of it and deploy the container to a server somewhere.","title":"Create an Online Version of BLIS"},{"location":"milestones/online_blis/#create-an-online-version-of-blis","text":"","title":"Create an Online Version of BLIS"},{"location":"milestones/online_blis/#design","text":"","title":"Design"},{"location":"milestones/online_blis/#make-it-work-on-linux","text":"The current version of BLIS uses Windows-bundled applications to function as a desktop application. These applications are tightly coupled (as the Server2Go package) and cannot be easily, independently updated. Meanwhile, Linux servers are ubiquitous in a cloud setting. They are cheaper than Windows VMs on Azure and AWS . Additionally, Linux is the only first-class supported option on DigitalOcean , which is a platform that our partner specifically mentioned using for testing. Making modifications to BLIS such that it can run on both a Linux environment and the traditional bundled Windows approach is therefore a priority.","title":"Make it work on Linux"},{"location":"milestones/online_blis/#containerize-it","text":"When BLIS was created, it was common for developers to install the webserver (Apache2), the runtime (PHP) and the database (MySQL) themselves and them drop the PHP application into a directory where the webserver could access it. Modern containerization technology such as Docker has allowed us to specify exactly how we want our application to be run and build the container that contains our entire application stack ourselves, ahead of time. This has benefits not only in setup of the application, but also security, as the application is isolated from the rest of the system. After the application is able to run in a container, something like docker compose can be used to configure and manage the deployment of the application as well as other standalone components (such as the database). Platforms such as DigitalOcean have a specification that allow an application to be deployed via container in just a few clicks (at a cost.) Containers are supported in all major cloud platforms, and even with self-hosted servers, they are easy to manage. Therefore, we will be providing a Docker container that runs BLIS.","title":"Containerize it"},{"location":"milestones/online_blis/#create-a-devcontainer-for-developing-blis-in-a-linux-like-environment","text":"Complete!","title":"Create a devcontainer for developing BLIS in a Linux-like environment"},{"location":"milestones/online_blis/#create-a-release-ready-dockerfile-for-deploying-blis","text":"Complete!","title":"Create a release-ready Dockerfile for deploying BLIS"},{"location":"milestones/online_blis/#create-a-github-action-for-automatically-creating-blis-deployment-packages-from-the-repository","text":"Even though BLIS is packaged as a container, we could create a .zip file that bundles the necessary scripts, extra files (database seed files), etc. needed to run a containerized version of BLIS. This can be done by adding the files to the repo, and creating a GitHub Action that packages them together with every release.","title":"Create a GitHub Action for automatically creating BLIS deployment packages from the repository"},{"location":"milestones/online_blis/#create-documentation-about-how-to-deploy-blis-as-a-container","text":"With the deployment package created (above), documentation needs to be added to make use of it and deploy the container to a server somewhere.","title":"Create documentation about how to deploy BLIS as a container"},{"location":"team_notes/mitchell/data-structure/","text":"Database & Backup Structure \u00b6 Notes as I look into the database and structure of the databases, and the backups generated by the \"export\" function. BLIS Default Users/passwords \u00b6 Username Password Description cameroon_dir dir123 Director's view testlab1_admin admin123 Lab admin account testlab1_tech1 tech123 Lab tech account testlab1_tech2 tech123 Lab tech account Database Dumps \u00b6 In the BLIS download from the website, the MySQL tables are prepopulated with a structure. It's not clear if this can be recreated exactly from the various SQL files available in the data/ directory. So I dumped the databases using DBeaver and here they are: blis_12 blis_127 blis_revamp I can use this to seed a container image of BLIS on Linux.","title":"Database & Backup Structure"},{"location":"team_notes/mitchell/data-structure/#database-backup-structure","text":"Notes as I look into the database and structure of the databases, and the backups generated by the \"export\" function.","title":"Database &amp; Backup Structure"},{"location":"team_notes/mitchell/data-structure/#blis-default-userspasswords","text":"Username Password Description cameroon_dir dir123 Director's view testlab1_admin admin123 Lab admin account testlab1_tech1 tech123 Lab tech account testlab1_tech2 tech123 Lab tech account","title":"BLIS Default Users/passwords"},{"location":"team_notes/mitchell/data-structure/#database-dumps","text":"In the BLIS download from the website, the MySQL tables are prepopulated with a structure. It's not clear if this can be recreated exactly from the various SQL files available in the data/ directory. So I dumped the databases using DBeaver and here they are: blis_12 blis_127 blis_revamp I can use this to seed a container image of BLIS on Linux.","title":"Database Dumps"},{"location":"team_notes/mitchell/php-observations/","text":"Adventures Upgrading PHP \u00b6 What is BLIS.exe? \u00b6 BLIS.exe appears to be a version of Server2Go , which manages all the config etc. and is what bundles Apache, PHP, and MySQL. This makes sense! We must have never had access to the source of BLIS.exe. If I use WinMerge to compare the BLIS directory and the Server2Go version 1.7.3 I found online (not linking since you shouldn't execute it - I extracted it with 7-Zip) there is considerable similarity. Uses PHP 5.2.10, some weird Windows version, customized by the Server2Go packagers Likely this version, although not downloadable anymore Key differences, based on config PHP \u00b6 src/ folder \u00b6 In BLIS there is a src/ folder which a bunch of stuff - looks like some PHP extension called jgraph or contour. I can't find any evidence this is actually used by the application though. php.ini config \u00b6 ; I assume this was bumped up to accommodate the backup feature max_execution_time = 300 ; Maximum execution time of each script, in seconds memory_limit = 500M ; Maximum amount of memory a script may consume (8MB) ; Same here, but for updating backups ; Maximum size of POST data that PHP will accept. post_max_size = 100M ; These extensions were UNcommented, or added extension = php_cpdf.dll extension = php_curl.dll extension = php_gd2.dll ; already present extension = php_mbstring.dll ; already present extension = php_mssql.dll ; already present extension = php_openssl.dll extension = php_pdf.dll extension = php_zip.dll ; this was added MySQL \u00b6 This was uncommented at the bottom: # Uncomment the following if you are using InnoDB tables innodb_data_home_dir = %CDPMS:DBDIR% innodb_data_file_path = ibdata1:10M:autoextend innodb_log_group_home_dir = %CDPMS:DBDIR% innodb_log_arch_dir = %CDPMS:DBDIR% innodb_buffer_pool_size = 256M innodb_additional_mem_pool_size = 20M innodb_log_file_size = 64M innodb_log_buffer_size = 8M innodb_flush_log_at_trx_commit = 1 innodb_lock_wait_timeout = 50 innodb_file_per_table = 1 Apache2 \u00b6 LoadModule rewrite_module modules/mod_rewrite.so # Predictably, because of the mod_rewrite, # AllowOverride was changed from \"None\" to \"All\" # in many places - those are the only other changes.","title":"Adventures Upgrading PHP"},{"location":"team_notes/mitchell/php-observations/#adventures-upgrading-php","text":"","title":"Adventures Upgrading PHP"},{"location":"team_notes/mitchell/php-observations/#what-is-blisexe","text":"BLIS.exe appears to be a version of Server2Go , which manages all the config etc. and is what bundles Apache, PHP, and MySQL. This makes sense! We must have never had access to the source of BLIS.exe. If I use WinMerge to compare the BLIS directory and the Server2Go version 1.7.3 I found online (not linking since you shouldn't execute it - I extracted it with 7-Zip) there is considerable similarity. Uses PHP 5.2.10, some weird Windows version, customized by the Server2Go packagers Likely this version, although not downloadable anymore Key differences, based on config","title":"What is BLIS.exe?"},{"location":"team_notes/mitchell/php-observations/#php","text":"","title":"PHP"},{"location":"team_notes/mitchell/php-observations/#src-folder","text":"In BLIS there is a src/ folder which a bunch of stuff - looks like some PHP extension called jgraph or contour. I can't find any evidence this is actually used by the application though.","title":"src/ folder"},{"location":"team_notes/mitchell/php-observations/#phpini-config","text":"; I assume this was bumped up to accommodate the backup feature max_execution_time = 300 ; Maximum execution time of each script, in seconds memory_limit = 500M ; Maximum amount of memory a script may consume (8MB) ; Same here, but for updating backups ; Maximum size of POST data that PHP will accept. post_max_size = 100M ; These extensions were UNcommented, or added extension = php_cpdf.dll extension = php_curl.dll extension = php_gd2.dll ; already present extension = php_mbstring.dll ; already present extension = php_mssql.dll ; already present extension = php_openssl.dll extension = php_pdf.dll extension = php_zip.dll ; this was added","title":"php.ini config"},{"location":"team_notes/mitchell/php-observations/#mysql","text":"This was uncommented at the bottom: # Uncomment the following if you are using InnoDB tables innodb_data_home_dir = %CDPMS:DBDIR% innodb_data_file_path = ibdata1:10M:autoextend innodb_log_group_home_dir = %CDPMS:DBDIR% innodb_log_arch_dir = %CDPMS:DBDIR% innodb_buffer_pool_size = 256M innodb_additional_mem_pool_size = 20M innodb_log_file_size = 64M innodb_log_buffer_size = 8M innodb_flush_log_at_trx_commit = 1 innodb_lock_wait_timeout = 50 innodb_file_per_table = 1","title":"MySQL"},{"location":"team_notes/mitchell/php-observations/#apache2","text":"LoadModule rewrite_module modules/mod_rewrite.so # Predictably, because of the mod_rewrite, # AllowOverride was changed from \"None\" to \"All\" # in many places - those are the only other changes.","title":"Apache2"},{"location":"team_notes/mitchell/webdev-notes/","text":"Mitchell's Fast & Furious Web Development Crash Course \u00b6 This is my super-duper quick, off-the-cuff, and totally unprofessional guide to getting up to speed in web development as it related to BLIS. The AMP Stack \u00b6 BLIS seems to come from a time when web development was a bunch of scripts dropped in a folder and expected to work. This was common for the era, and it was/is called *AMP stack. Commonly LAMP or WAMP, it stands for \"Linux (or Windows) Apache MySQL PHP.\" The Apache Web server : this is an oldie but a goodie, it's one of the most commonly used web servers on the Internet. Unfortunately, that can mean it's a little bit more difficult to configure since there are a lot of options, but fortunately we don't need anything complicated. MySQL : This is one of the most popular SQL databases, and it used to be a more popular choice until Oracle got its hands on it. PHP : A scripting language that is extremely popular and therefore, a common attack vector. PHP remains popular because it is very easy to learn. Getting AMPed Up \u00b6 BLIS runs on Windows, but the software it's built on started on *nix servers.For that reason, it will sound silly, but I recommend the following resources for familiarizing yourself with the stack: Create a virtual machine of the latest Ubuntu (can be either Server edition or Desktop edition, but you will be using the terminal a bit either way) Familiarize yourself with the Web Servers section of the Ubuntu Server Guide. Goals: Install Apache View the sample web page that proves Apache is running If you are unsure of the purpose of a web server or how the HTTP protocol works, you can read about HTTP on the MDN website . Install MySQL on Ubuntu (just the Installation section, unless you want to read further). Read the section on LAMP Applications . Goals: Install phpMyAdmin and view the interface in your browser Now that you have a LAMP stack (good job!) you get to install WordPress! Their installation process used to be called \"The Famous Five-Minute Install\" but it seems like they changed it. Regardless, you can read up here . Goals: Make a wordpress blog that's hosted in your VM. That's the *AMP Stack! Back to BLIS \u00b6 BLIS, of course, does not run on Linux (easily, anyway), but hopefully by now you should be familiar with the different pieces and how they work together. As far as I can tell, BLIS is all of these applications in their Windows form, bundled together with a set of configuration files that provide the bare minimum needed to get BLIS up and running on a single computer. Which actual files those are, are not clear to me since there are some duplicates. In the Browser \u00b6 I think these technologies are ones that make more sense if you learn as you go, but it's good to have some reference material ready that you can use when you need it. For reading up about web development technologies in terms of what happens in the browser, I'd recommend reading the Mozilla Developer Network. https://developer.mozilla.org/en-US/docs/Web/HTML https://developer.mozilla.org/en-US/docs/Web/CSS https://developer.mozilla.org/en-US/docs/Web/JavaScript as well as the introductory documentation of jQuery, a library that used to be popular because developing for different browsers was terrible (and BLIS seems to use it still). https://learn.jquery.com/","title":"Mitchell's Fast & Furious Web Development Crash Course"},{"location":"team_notes/mitchell/webdev-notes/#mitchells-fast-furious-web-development-crash-course","text":"This is my super-duper quick, off-the-cuff, and totally unprofessional guide to getting up to speed in web development as it related to BLIS.","title":"Mitchell's Fast &amp; Furious Web Development Crash Course"},{"location":"team_notes/mitchell/webdev-notes/#the-amp-stack","text":"BLIS seems to come from a time when web development was a bunch of scripts dropped in a folder and expected to work. This was common for the era, and it was/is called *AMP stack. Commonly LAMP or WAMP, it stands for \"Linux (or Windows) Apache MySQL PHP.\" The Apache Web server : this is an oldie but a goodie, it's one of the most commonly used web servers on the Internet. Unfortunately, that can mean it's a little bit more difficult to configure since there are a lot of options, but fortunately we don't need anything complicated. MySQL : This is one of the most popular SQL databases, and it used to be a more popular choice until Oracle got its hands on it. PHP : A scripting language that is extremely popular and therefore, a common attack vector. PHP remains popular because it is very easy to learn.","title":"The AMP Stack"},{"location":"team_notes/mitchell/webdev-notes/#getting-amped-up","text":"BLIS runs on Windows, but the software it's built on started on *nix servers.For that reason, it will sound silly, but I recommend the following resources for familiarizing yourself with the stack: Create a virtual machine of the latest Ubuntu (can be either Server edition or Desktop edition, but you will be using the terminal a bit either way) Familiarize yourself with the Web Servers section of the Ubuntu Server Guide. Goals: Install Apache View the sample web page that proves Apache is running If you are unsure of the purpose of a web server or how the HTTP protocol works, you can read about HTTP on the MDN website . Install MySQL on Ubuntu (just the Installation section, unless you want to read further). Read the section on LAMP Applications . Goals: Install phpMyAdmin and view the interface in your browser Now that you have a LAMP stack (good job!) you get to install WordPress! Their installation process used to be called \"The Famous Five-Minute Install\" but it seems like they changed it. Regardless, you can read up here . Goals: Make a wordpress blog that's hosted in your VM. That's the *AMP Stack!","title":"Getting AMPed Up"},{"location":"team_notes/mitchell/webdev-notes/#back-to-blis","text":"BLIS, of course, does not run on Linux (easily, anyway), but hopefully by now you should be familiar with the different pieces and how they work together. As far as I can tell, BLIS is all of these applications in their Windows form, bundled together with a set of configuration files that provide the bare minimum needed to get BLIS up and running on a single computer. Which actual files those are, are not clear to me since there are some duplicates.","title":"Back to BLIS"},{"location":"team_notes/mitchell/webdev-notes/#in-the-browser","text":"I think these technologies are ones that make more sense if you learn as you go, but it's good to have some reference material ready that you can use when you need it. For reading up about web development technologies in terms of what happens in the browser, I'd recommend reading the Mozilla Developer Network. https://developer.mozilla.org/en-US/docs/Web/HTML https://developer.mozilla.org/en-US/docs/Web/CSS https://developer.mozilla.org/en-US/docs/Web/JavaScript as well as the introductory documentation of jQuery, a library that used to be popular because developing for different browsers was terrible (and BLIS seems to use it still). https://learn.jquery.com/","title":"In the Browser"}]}